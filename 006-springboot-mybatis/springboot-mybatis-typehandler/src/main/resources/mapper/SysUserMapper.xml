<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keqi.springbootmybatistypehandler.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.keqi.springbootmybatistypehandler.domain.SysUser">
        <!--@mbg.generated-->
        <!--@Table sys_user-->
        <id column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="dept_id" jdbcType="BIGINT" property="deptId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="user_type" jdbcType="VARCHAR" property="userType"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phonenumber" typeHandler="DoubleHandler" property="phonenumber"/>
        <!--typeHandler 都已经直接指定了，那就根本不需要指定 javaType 和 jdbcType 了
            指定全名要这么长：typeHandler="com.keqi.springbootmybatistypehandler.typeHandler.BaseEnumTypeHandler"
            可以使用别名呀：BaseEnumTypeHandler
        -->
        <result column="sex"  property="sex" typeHandler="BaseEnumTypeHandler"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
        <result column="login_ip" jdbcType="VARCHAR" property="loginIp"/>
        <result column="login_date" jdbcType="TIMESTAMP" property="loginDate"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="jsonStr" property="jsonStr" typeHandler="JSONObjectHandler"/>
        <result column="jsonArrayStr" property="jsonArrayStr" typeHandler="JSONArrayHandler"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        user_id, dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar,
        `password`, `status`, del_flag, login_ip, login_date, create_by, create_time, update_by,
        update_time, remark,jsonStr,jsonArrayStr
    </sql>

    <select id="findOneById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <insert id="insert" keyColumn="user_id" keyProperty="userId"
            parameterType="com.keqi.springbootmybatistypehandler.domain.SysUser" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sys_user (dept_id, user_name, nick_name,
        user_type, email, phonenumber,
        sex, avatar, `password`,
        `status`, del_flag, login_ip,
        login_date, create_by, create_time,
        update_by, update_time, remark,jsonStr,jsonArrayStr
        )
        values (#{deptId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
        #{userType,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR},
        #{sex, typeHandler=com.keqi.springbootmybatistypehandler.typeHandler.BaseEnumTypeHandler},
        #{avatar,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{status,jdbcType=CHAR}, #{delFlag,jdbcType=CHAR}, #{loginIp,jdbcType=VARCHAR},
        #{loginDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR},
        #{jsonStr,typeHandler=JSONObjectHandler},#{jsonArrayStr,typeHandler=JSONArrayHandler}
        )
    </insert>





</mapper>