<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keqi.springbootmybatisognl.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.keqi.springbootmybatisognl.domain.SysUser">
        <!--@mbg.generated-->
        <!--@Table sys_user-->
        <id column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="dept_id" jdbcType="BIGINT" property="deptId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="user_type" jdbcType="VARCHAR" property="userType"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber"/>
        <result column="sex" jdbcType="CHAR" property="sex"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
        <result column="login_ip" jdbcType="VARCHAR" property="loginIp"/>
        <result column="login_date" jdbcType="TIMESTAMP" property="loginDate"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>

    <!--
        1) 测试 ${} 中使用 ognl 表达式调用静态类的静态方法。createBy字段进行测试
            重点：在MyBatis中处理${}的时候，只是使用OGNL计算这个结果值，然后替换SQL中对应的${xxx}，OGNL处理的只是${这里的表达式}
            正确用法：'${@com.keqi.springbootmybatisognl.common.Auth@getAccount()}'
        2) 测试<bind/>标签中使用 ognl 表达式调用静态类的静态方法。updateBy字段进行测试
            重点：<bind/>标签中使用 ognl 表达式，就不需要使用$符号,而且能够防止SQL注入，推荐这种方式
            正确用法：<bind name="bindUpdateBy" value="@com.keqi.springbootmybatisognl.common.Auth@getLoginAccount()"/>
    -->
    <insert id="insert" keyColumn="user_id" keyProperty="userId"
            parameterType="com.keqi.springbootmybatisognl.domain.SysUser" useGeneratedKeys="true">
        <bind name="bindUpdateBy" value="@com.keqi.springbootmybatisognl.common.Auth@getLoginAccount()"/>
        insert into sys_user (dept_id, user_name, nick_name,
            login_date, create_by, create_time,
            update_by, update_time, remark
        )
        values (#{deptId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
            #{loginDate,jdbcType=TIMESTAMP},
            '${@com.keqi.springbootmybatisognl.common.Auth@getLoginAccount()}',
            #{createTime,jdbcType=TIMESTAMP},
            #{bindUpdateBy,jdbcType=VARCHAR},
            #{updateTime,jdbcType=TIMESTAMP},
            #{remark,jdbcType=VARCHAR}
        )
    </insert>

</mapper>